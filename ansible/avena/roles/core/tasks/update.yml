- name: Ensure non-free is available to apt
  become: yes
  apt_repository:
    repo: deb http://deb.debian.org/debian buster non-free
    state: present
    filename: debian-non-free
    update_cache: no

- name: Ensure buster-backports is available to apt
  become: yes
  apt_repository:
    repo: deb http://deb.debian.org/debian buster-backports main
    state: present
    filename: debian-buster-backports
    update_cache: no
  when: ansible_distribution_release == "buster"

# Wait up update cache until now due to known Ansible bugs
- name: Update apt cache
  become: yes
  apt:
    update_cache: yes

- name: Ensure the Linux Kernel headers as marked as held or not according to the kernel_lock_upgrades variable (arm)
  become: yes
  dpkg_selections:
    name: linux-headers-armmp
    selection: "{{ 'hold' if kernel_lock_upgrades is defined and kernel_lock_upgrades is sameas true else 'install' }}"
  when: ansible_facts.architecture == "armv7l" 

- name: Ensure the Linux Kernel image as marked as held or not according to the kernel_lock_upgrades variable (arm)
  become: yes
  dpkg_selections:
    name: linux-image-armmp
    selection: "{{ 'hold' if kernel_lock_upgrades is defined and kernel_lock_upgrades is sameas true else 'install' }}"
  when: ansible_facts.architecture == "armv7l"

- name: Ensure the Linux Kernel headers as marked as held or not according to the kernel_lock_upgrades variable (x86_64)
  become: yes
  dpkg_selections:
    name: linux-headers-amd64
    selection: "{{ 'hold' if kernel_lock_upgrades is defined and kernel_lock_upgrades is sameas true else 'install' }}"
  when: ansible_facts.architecture == "x86_64"

- name: Ensure the Linux Kernel image as marked as held or not according to the kernel_lock_upgrades variable (x86_64)
  become: yes
  dpkg_selections:
    name: linux-image-amd64
    selection: "{{ 'hold' if kernel_lock_upgrades is defined and kernel_lock_upgrades is sameas true else 'install' }}"
  when: ansible_facts.architecture == "x86_64"

- name: ensure Linux Kernel is up to date (arm)
  become: yes
  apt:
    name:
      - linux-image-armmp
      - linux-headers-armmp
    state: latest
    default_release: "{{ 'buster-backports' if ansible_distribution_release == 'buster' | default(omit) }}"
  notify: reboot system
  when: ansible_facts.architecture == "armv7l" and (kernel_lock_upgrades is not defined or not kernel_lock_upgrades)

- name: ensure Linux Kernel is up to date (x86_64)
  become: yes
  apt:
    name:
      - linux-image-amd64
      - linux-headers-amd64
    state: latest
    default_release: "{{ 'buster-backports' if ansible_distribution_release == 'buster' | default(omit) }}"
#  notify: reboot system
  when: ansible_facts.architecture == "x86_64" and (kernel_lock_upgrades is not defined or not kernel_lock_upgrades)

- name: ensure base operating system is up to date
  become: yes
  apt:
    upgrade: dist
    autoclean: yes
    autoremove: yes
  async: 600
  poll: 10

- name: check if reboot is needed
  stat:
    path: /var/run/reboot-required
  register: reboot_required
  changed_when: reboot_required.stat.exists
  notify: reboot system

- name: Run handlers to ensure system is updated before continuing
  meta: flush_handlers
